{"version":3,"sources":["components/common/dropTarget/dropTarget.tsx","components/file/file.tsx","components/common/tree/tree.tsx","components/hierarchy/hierarchy.tsx","utils.ts","components/settings/settings.tsx","app.tsx","reportWebVitals.ts","index.tsx"],"names":["DropTarget","props","areaRef","React","state","currentlyOver","processing","percentage","event","a","stopPropagation","preventDefault","dataTransfer","files","length","this","setState","Array","from","forEach","file","reader","FileReader","addEventListener","e","loaded","total","setPercentage","console","log","setTimeout","readAsBinaryString","dropEffect","num","current","style","setProperty","ref","className","onDragOver","handleDragOver","bind","onDrop","handleDrop","onDragLeave","handleDragLeave","droppingText","text","File","TreeNode","active","handleClick","onClick","name","children","Tree","Hierarchy","getPreferences","JSON","parse","localStorage","getItem","setPreferences","preferences","setItem","stringify","Settings","handleClearPreferences","window","location","reload","App","key","leftColRef","resizing","leftSize","createRef","handleDragging","HashPreservingNavLink","HashNavLink","isActive","hash","to","TypeError","pathname","toString","routeProps","newRouteProps","path","component","render","clientX","document","documentElement","cursor","value","setPreference","id","onMouseMove","onMouseUp","width","HashRoute","onMouseDown","exact","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2a2be350.chunk.js","sourcesContent":["import * as React from 'react';\nimport './dropTarget.sass';\n\nexport interface DropTargetProps {\n    text: string;\n    droppingText?: string;\n}\n\nexport interface DropTargetState {\n    currentlyOver: boolean;\n    processing: boolean;\n    percentage: number;\n}\n\nclass DropTarget extends React.Component<DropTargetProps, DropTargetState> {\n    areaRef: React.RefObject<HTMLDivElement>;\n    constructor(props: DropTargetProps) {\n        super(props);\n        this.areaRef = React.createRef();\n        this.state = { currentlyOver: false, processing: false, percentage: 0 };\n    }\n\n    async handleDrop(event: React.DragEvent<HTMLDivElement>) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (event.dataTransfer.files.length > 0) {\n            this.setState({ currentlyOver: false, processing: true });\n        } else {\n            this.setState({ currentlyOver: false });\n        }\n\n        Array.from(event.dataTransfer.files).forEach(async file => {\n            var reader = new FileReader();\n            reader.addEventListener('progress', e => {\n                var percentage = ((e.loaded || 0) / (e.total || 1)) * 100;\n                this.setPercentage(percentage);\n                console.log(percentage);\n            });\n            reader.addEventListener('load', e => {\n                console.log('done!');\n                this.setState({ percentage: 100 });\n                setTimeout(() => {\n                    this.setState({ processing: false });\n                    setTimeout(() => {\n                        this.setState({ percentage: 0 });\n                    }, 2000);\n                }, 1000);\n            });\n            reader.readAsBinaryString(file);\n        });\n    }\n\n    handleDragOver(event: React.DragEvent<HTMLDivElement>) {\n        event.stopPropagation();\n        event.preventDefault();\n        event.dataTransfer.dropEffect = 'copy';\n        this.setState({ currentlyOver: true });\n    }\n\n    handleDragLeave(event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault();\n        this.setState({ currentlyOver: false });\n    }\n\n    setPercentage(num: number) {\n        this.setState({ percentage: num });\n    }\n\n    componentDidUpdate() {\n        this.areaRef.current?.style.setProperty('--percentage', this.state.percentage + '%');\n    }\n\n    render() {\n        return (\n            <div\n                ref={this.areaRef}\n                className={\n                    'drop-area' +\n                    (this.state.currentlyOver ? ' over' : '') +\n                    (this.state.processing ? ' processing' : '')\n                }\n                onDragOver={this.handleDragOver.bind(this)}\n                onDrop={this.handleDrop.bind(this)}\n                onDragLeave={this.handleDragLeave.bind(this)}>\n                {this.state.currentlyOver ? this.props.droppingText || this.props.text : this.props.text}\n            </div>\n        );\n    }\n}\n\nexport default DropTarget;\n","import * as React from 'react';\nimport DropTarget from '../common/dropTarget/dropTarget';\n\nexport interface FileProps {}\n\nexport interface FileState {\n\n}\n\nclass File extends React.Component<FileProps, FileState> {\n    constructor(props: FileProps) {\n        super(props);\n        this.state = {};\n    }\n\n    handleDrop(event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault();\n        console.log(event.dataTransfer.files);\n    }\n\n    handleDragOver(event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <>\n                <DropTarget droppingText=\"Release to upload world\" text=\"Drop world database file here\"></DropTarget>\n                <DropTarget droppingText=\"Release to upload blueprint\" text=\"Drop blueprint folder here\"></DropTarget>\n            </>\n        );\n    }\n}\n\nexport default File;\n","import * as React from 'react';\nimport './tree.sass';\n\nexport interface TreeNodeProps {\n    name: string;\n}\n\nexport interface TreeNodeState {\n    active: boolean;\n}\n\nexport class TreeNode extends React.Component<TreeNodeProps, TreeNodeState> {\n    constructor(props: TreeNodeProps) {\n        super(props);\n        this.state = { active: false };\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.setState({ active: !this.state.active });\n    }\n\n    render() {\n        return (\n            <li>\n                <span onClick={this.handleClick} className={'caret' + (this.state.active ? ' down' : '')}>\n                    {this.props.name}\n                </span>\n                <ul className={'nested' + (this.state.active ? ' active' : '')}>{this.props.children}</ul>\n            </li>\n        );\n    }\n}\n\nexport interface TreeProps {\n    name: string;\n}\n\nexport interface TreeState {}\n\nexport class Tree extends React.Component<TreeProps, TreeState> {\n    constructor(props: TreeProps) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <ul className='tree'>\n                <TreeNode name={this.props.name}>{this.props.children}</TreeNode>\n            </ul>\n        );\n    }\n}\n","import * as React from 'react';\nimport { Tree, TreeNode } from '../common/tree/tree';\n\nexport interface HierarchyProps {}\n\nexport interface HierarchyState {}\n\nclass Hierarchy extends React.Component<HierarchyProps, HierarchyState> {\n    constructor(props: HierarchyProps) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <Tree name=\"root\">\n                <TreeNode name='creation1'>\n                    <TreeNode name=\"state\">\n                        <li>id: hejsan</li>\n                    </TreeNode>\n                    <TreeNode name=\"part1\">\n                        <li>type: block</li>\n                        <li>color: #111aaa</li>\n                    </TreeNode>\n                </TreeNode>\n                <TreeNode name='creation2'>\n                    <TreeNode name=\"state\">\n                        <li>id: hejsan</li>\n                    </TreeNode>\n                    <TreeNode name=\"part1\">\n                        <li>type: block</li>\n                        <li>color: #111aaa</li>\n                    </TreeNode>\n                </TreeNode>\n            </Tree>\n        );\n    }\n}\n\nexport default Hierarchy;\n","interface JSONObject {\n    [key: string]: any;\n}\n\nfunction getPreferences(): JSONObject {\n    return JSON.parse(localStorage.getItem('preferences') || '{}');\n}\n\nfunction setPreferences(preferences: JSONObject) {\n    localStorage.setItem('preferences', JSON.stringify(preferences));\n}\n\nfunction setPreference(key: string, value: any) {\n    let preferences = getPreferences();\n    preferences[key] = value;\n    setPreferences(preferences);\n}\n\nfunction getPreference(key: string): any {\n    return getPreferences()[key];\n}\n\nexport { getPreferences, getPreference, setPreferences, setPreference };\n","import * as React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { setPreferences } from '../../utils';\n\nexport interface SettingsProps extends RouteComponentProps {}\n\nexport interface SettingsState {}\n\nclass Settings extends React.Component<SettingsProps, SettingsState> {\n    constructor(props: SettingsProps) {\n        super(props);\n        this.state = {};\n        this.handleClearPreferences = this.handleClearPreferences.bind(this);\n    }\n    handleClearPreferences() {\n        setPreferences({});\n        window.location.reload();\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.handleClearPreferences}>Clear preferences</button>\n                <button className=\"shining\" onClick={this.handleClearPreferences}>Clear preferences</button>\n            </div>\n        );\n    }\n}\n\nexport default Settings;\n","import React from 'react';\nimport { NavLink, NavLinkProps, Switch, RouteComponentProps, Route, RouteProps, Redirect } from 'react-router-dom';\nimport './app.sass';\nimport File from './components/file/file';\nimport Hierarchy from './components/hierarchy/hierarchy';\nimport Settings from './components/settings/settings';\nimport { getPreference, setPreference } from './utils';\nexport interface AppProps extends RouteComponentProps {}\n\n// export interface HashRouteProps extends RouteProps {\n//     path:\n// }\n\nexport interface AppState {\n    leftSize?: number;\n    resizing: boolean;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    leftColRef: React.Ref<HTMLElement>;\n    constructor(props: AppProps) {\n        super(props);\n        this.state = { resizing: false, leftSize: getPreference('leftSize') };\n        this.leftColRef = React.createRef();\n        this.handleDragging = this.handleDragging.bind(this);\n        this.HashPreservingNavLink = this.HashPreservingNavLink.bind(this);\n        this.HashNavLink = this.HashNavLink.bind(this);\n    }\n\n    HashNavLink(props: React.PropsWithoutRef<NavLinkProps>) {\n        return <NavLink isActive={() => window.location.hash === props.to} {...props} />;\n    }\n\n    HashPreservingNavLink(props: React.PropsWithoutRef<NavLinkProps>) {\n        if (typeof props.to === 'object') {\n            throw new TypeError('Objects as to attribute is currently not supported');\n        }\n        return <NavLink {...props} to={{ pathname: props.to.toString(), hash: this.props.location.hash }} />;\n    }\n\n    HashRoute(routeProps: RouteProps) {\n        let newRouteProps = { ...routeProps };\n        delete newRouteProps.path;\n        delete newRouteProps.component;\n        return (\n            <Route\n                {...newRouteProps}\n                render={(props: RouteComponentProps) => {\n                    console.log('Rendering!');\n                    if (props.location.hash === routeProps.path && routeProps.component) {\n                        return <routeProps.component {...props} />;\n                    }\n                    return <></>;\n                }}\n            />\n        );\n    }\n\n    handleDragging(e: React.MouseEvent<HTMLDivElement>) {\n        if (this.state.resizing) {\n            this.setState({ leftSize: e.clientX });\n            document.documentElement.style.cursor = 'ew-resize';\n        } else {\n            document.documentElement.style.cursor = 'unset';\n        }\n    }\n\n    componentDidUpdate() {\n        setPreference('leftSize', this.state.leftSize);\n    }\n\n    render() {\n        return (\n            <div\n                id='app'\n                onMouseMove={this.handleDragging}\n                onMouseUp={() => {\n                    if (this.state.resizing) this.setState({ resizing: false });\n                }}>\n                <aside ref={this.leftColRef} style={{ width: this.state.leftSize }} id='left-col'>\n                    <nav>\n                        <ul className='tabbed'>\n                            <li>\n                                <this.HashNavLink to='#file'>File</this.HashNavLink>\n                            </li>\n                            <li>\n                                <this.HashNavLink to='#hierarchy'>Hierarchy</this.HashNavLink>\n                            </li>\n                            <li>\n                                <this.HashNavLink to='#settings'>Settings</this.HashNavLink>\n                            </li>\n                        </ul>\n                    </nav>\n                    <div id='left-content'>\n                        <this.HashRoute path='#file' component={File} />\n                        <this.HashRoute path='#settings' component={Settings} />\n                        <this.HashRoute path='#hierarchy' component={Hierarchy} />\n                    </div>\n                </aside>\n                <div className='resize-vertical-divider' onMouseDown={() => this.setState({ resizing: true })} />\n                <main id='right-col'>\n                    <nav>\n                        <ul className='tabbed'>\n                            <li className='selected'>\n                                <this.HashPreservingNavLink to='/bodies'>Bodies</this.HashPreservingNavLink>\n                            </li>\n                            <li>\n                                <this.HashPreservingNavLink to='/world'>World</this.HashPreservingNavLink>\n                            </li>\n                            <li>\n                                <this.HashPreservingNavLink to='/3d'>3d</this.HashPreservingNavLink>\n                            </li>\n                            <li>\n                                <this.HashPreservingNavLink to='/map'>Map</this.HashPreservingNavLink>\n                            </li>\n                        </ul>\n                    </nav>\n                    <Route exact path='/'>\n                        <Redirect to='/bodies#file' />\n                    </Route>\n                    <Switch></Switch>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Route component={App} />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}